use core::cmp::{min,max};
use std::iter::zip;

type Coord=i32;

fn main() {
    println!("Hello, world!");
    let answer = do_the_thing(get_puzzle_input());
    println!("answer: {answer}");
    let answer = do_the_other_thing(get_puzzle_input());
    println!("answer: {answer}");
}

fn do_the_thing(input: &str) -> i32 {
    let formations = parse_data(input);
    let mut graph = graph_all(formations);
    
    simulate_sand(&mut graph, 500, 0)
}

#[test]
fn test_do_the_thing() {
    let answer = do_the_thing(get_sample_data());
    assert_eq!(24, answer);
}

fn do_the_other_thing(input: &str) -> i32 {
    let formations = parse_data(input);
    let mut highest_y = 0;
    for formation in &formations {
        for thingy in formation {
            if thingy.1 > highest_y { highest_y = thingy.1 }
        }
    }

    let mut graph = graph_all(formations);

    // floor
    graph[highest_y as usize+2] = vec![1;graph[highest_y as usize+2].len()];

    simulate_sand(&mut graph, 500, 0)
}

#[test]
fn test_do_the_other_thing() {
    let answer = do_the_other_thing(get_sample_data());
    assert_eq!(93, answer);
}

fn graph_all(formations: Vec<Vec<(Coord,Coord)>>) -> Vec<Vec<u8>> {
    let mut graph = vec![vec![0u8;1000];1000];
    for formation in formations {
        graph_formation(&mut graph, formation);
    }

    graph
}

fn graph_formation(graph: &mut Vec<Vec<u8>>, formation: Vec<(Coord,Coord)>) {
    let start_segments = &formation[..formation.len()-1];
    let end_segments = &formation[1..];
    let segments = zip(start_segments, end_segments);

    for segment in segments {
        graph_segment(graph, segment.0, segment.1);
    }
}

#[test]
fn test_graph_formation() {
    let mut graph : Vec<Vec<u8>> = vec![vec![0;5];3];
    graph_formation(&mut graph, vec![(3,0),(1,0),(1,2),(0,2)]);
    assert_eq!(vec![0,1,1,1,0], graph[0]);
    assert_eq!(vec![0,1,0,0,0], graph[1]);
    assert_eq!(vec![1,1,0,0,0], graph[2]);
}

fn graph_segment(graph: &mut Vec<Vec<u8>>, segment0: &(Coord,Coord), segment1: &(Coord,Coord)) {
    // this swapping only works because one pair of coordinates has to equal itself
    let x_max = max(segment0.0, segment1.0);
    let x_min: Coord = min(segment0.0, segment1.0);
    let y_max = max(segment0.1, segment1.1);
    let y_min = min(segment0.1, segment1.1);
    let delta_x = if x_max > x_min { 1 } else { 0 };
    let delta_y = if y_max > y_min { 1 } else { 0 };
    let mut pencil = (x_min, y_min);
    loop {
        graph[pencil.1 as usize][pencil.0 as usize] = 1;
        if pencil == (x_max, y_max) { 
            break; 
        }
        pencil.0 += delta_x;
        pencil.1 += delta_y;
    }
}

#[test]
fn test_graph_segment() {
    let mut graph : Vec<Vec<u8>> = vec![vec![0;4];3];
    graph_segment(&mut graph, &(1,1), &(3,1));
    assert_eq!(vec![0,0,0,0], graph[0]);
    assert_eq!(vec![0,1,1,1], graph[1]);
    assert_eq!(vec![0,0,0,0], graph[2]);
    graph_segment(&mut graph, &(1,2), &(1,0));
    assert_eq!(vec![0,1,0,0], graph[0]);
    assert_eq!(vec![0,1,1,1], graph[1]);
    assert_eq!(vec![0,1,0,0], graph[2]);
}

fn parse_formation(line: &str) -> Vec<(Coord,Coord)> {
    let mut formation : Vec<(Coord,Coord)> = vec![];
    for pair_str in line.split(" -> ") {
        let mut ints = pair_str.split(',');
        let x = ints.next().unwrap().parse::<Coord>().unwrap();
        let y = ints.next().unwrap().parse::<Coord>().unwrap();
        formation.push((x,y));
    }

    formation
}

#[test]
fn test_parse_formation() {
    let formation = parse_formation("498,4 -> 498,6 -> 496,6");
    assert_eq!((498,4), formation[0]);
    assert_eq!((498,6), formation[1]);
    assert_eq!((496,6), formation[2]);
}

fn parse_data(input: &str) -> Vec<Vec<(Coord,Coord)>> {
    let mut formations: Vec<Vec<(Coord,Coord)>> = vec![];
    for line in input.lines() {
        formations.push(parse_formation(line));
    }

    formations
}

#[test]
fn test_parse_data() {
    let formations = parse_data(get_sample_data());
    assert_eq!(2, formations.len());
    assert_eq!((498,4), formations[0][0]);
    assert_eq!((498,6), formations[0][1]);
    assert_eq!((496,6), formations[0][2]);
}

fn simulate_sand(graph: &mut Vec<Vec<u8>>, start_x: Coord, start_y: Coord) -> i32 {
    let mut i = 0i32;
    loop {
        if !simulate_sand_cell(graph, start_x, start_y) {
            break;
        }
        i = i+1;
        if graph[start_y as usize][start_x as usize]==2 {
            break;
        }
    }

    i
}

// true for stopped, false for into the void
fn simulate_sand_cell(graph: &mut Vec<Vec<u8>>, start_x: Coord, start_y: Coord) -> bool {
    let mut x = start_x;
    let mut y = start_y;
    loop {
        if y as usize >= graph.len()-1 {
            return false;
        }
        if graph[(y+1) as usize][x as usize]!=0 {
            if graph[(y+1) as usize][(x-1) as usize]==0 { // bad graphs can OOB, I'll just make the graph larger if that happens
                x = x-1;
                y = y+1;
            }
            else if graph[(y+1) as usize][(x+1) as usize]==0 {
                x = x+1;
                y = y+1;
            }
            else {
                graph[y as usize][x as usize] = 2;
                return true;
            }
        }
        else {
            x = x;
            y = y+1;
        }
    }
}

#[test]
fn test_simulate_sand_cell() {
    let mut graph = vec![vec![0;7];6];
    graph[4][1]=1;
    graph[4][3]=1;
    graph[4][4]=1;
    graph[4][5]=1;
    assert!(!simulate_sand_cell(&mut graph, 1, 0));
    assert!(!simulate_sand_cell(&mut graph, 2, 0));
    assert!(!simulate_sand_cell(&mut graph, 3, 0));
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[3][4]);
    assert!(!simulate_sand_cell(&mut graph, 5, 0));
    // test piling on
    graph[4][2]=1;
    graph[4][6]=1;
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[3][4]);
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[3][3]);
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[3][5]);
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[2][4]);
    assert!(simulate_sand_cell(&mut graph, 4, 0));
    assert_eq!(2, graph[3][2]);
}

fn get_sample_data() -> &'static str {
"498,4 -> 498,6 -> 496,6
503,4 -> 502,4 -> 502,9 -> 494,9"
}

fn get_puzzle_input() -> &'static str {
"494,71 -> 498,71
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
469,53 -> 474,53
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
499,38 -> 503,38
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
485,62 -> 489,62
493,38 -> 497,38
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
484,29 -> 488,29
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
488,65 -> 492,65
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
482,122 -> 486,122
482,71 -> 486,71
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
491,68 -> 495,68
476,128 -> 480,128
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
460,59 -> 465,59
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
473,74 -> 473,75 -> 480,75
477,57 -> 482,57
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
493,32 -> 497,32
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
473,55 -> 478,55
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
496,35 -> 500,35
479,125 -> 483,125
456,57 -> 461,57
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,35 -> 494,35
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
474,59 -> 479,59
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
481,38 -> 485,38
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
485,119 -> 491,119 -> 491,118
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
487,26 -> 491,26
481,59 -> 486,59
459,55 -> 464,55
488,128 -> 492,128
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
488,71 -> 492,71
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
487,38 -> 491,38
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
482,65 -> 486,65
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
481,32 -> 485,32
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
475,38 -> 479,38
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
485,68 -> 489,68
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
482,144 -> 482,147 -> 480,147 -> 480,153 -> 489,153 -> 489,147 -> 488,147 -> 488,144
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
464,77 -> 464,78 -> 473,78 -> 473,77
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
473,74 -> 473,75 -> 480,75
485,119 -> 491,119 -> 491,118
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
484,35 -> 488,35
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
464,77 -> 464,78 -> 473,78 -> 473,77
453,59 -> 458,59
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
467,59 -> 472,59
485,156 -> 498,156 -> 498,155
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
463,57 -> 468,57
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
464,77 -> 464,78 -> 473,78 -> 473,77
462,53 -> 467,53
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
472,131 -> 472,134 -> 466,134 -> 466,141 -> 484,141 -> 484,134 -> 476,134 -> 476,131
483,107 -> 483,110 -> 476,110 -> 476,113 -> 487,113 -> 487,110 -> 486,110 -> 486,107
466,55 -> 471,55
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
482,128 -> 486,128
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
465,51 -> 470,51
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
487,32 -> 491,32
476,71 -> 480,71
490,29 -> 494,29
494,169 -> 494,159 -> 494,169 -> 496,169 -> 496,167 -> 496,169 -> 498,169 -> 498,166 -> 498,169 -> 500,169 -> 500,167 -> 500,169 -> 502,169 -> 502,161 -> 502,169
485,156 -> 498,156 -> 498,155
478,35 -> 482,35
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
479,68 -> 483,68
478,104 -> 478,103 -> 478,104 -> 480,104 -> 480,96 -> 480,104 -> 482,104 -> 482,97 -> 482,104 -> 484,104 -> 484,97 -> 484,104
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
472,41 -> 472,45 -> 469,45 -> 469,48 -> 479,48 -> 479,45 -> 477,45 -> 477,41
490,23 -> 490,17 -> 490,23 -> 492,23 -> 492,18 -> 492,23 -> 494,23 -> 494,16 -> 494,23 -> 496,23 -> 496,17 -> 496,23 -> 498,23 -> 498,19 -> 498,23 -> 500,23 -> 500,16 -> 500,23 -> 502,23 -> 502,20 -> 502,23 -> 504,23 -> 504,13 -> 504,23 -> 506,23 -> 506,13 -> 506,23 -> 508,23 -> 508,21 -> 508,23
470,57 -> 475,57
465,91 -> 465,90 -> 465,91 -> 467,91 -> 467,84 -> 467,91 -> 469,91 -> 469,85 -> 469,91 -> 471,91 -> 471,88 -> 471,91 -> 473,91 -> 473,88 -> 473,91 -> 475,91 -> 475,88 -> 475,91 -> 477,91 -> 477,84 -> 477,91 -> 479,91 -> 479,90 -> 479,91 -> 481,91 -> 481,88 -> 481,91
485,125 -> 489,125"
}