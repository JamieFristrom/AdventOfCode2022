use nom::{
    IResult,
    multi::{many0, many1},
    combinator::recognize,
    sequence::terminated,
    character::complete::{char, one_of},
  };
  

#[derive(Debug, PartialEq)]
enum Packet {
    List(Vec<Packet>),
    Int(i64)
}

fn parse_decimal(input: &str) -> IResult<&str, &str> {
    recognize(
      many1(
        terminated(one_of("0123456789"), many0(char('_')))
      )
    )(input)
  }


#[test]
fn test_parse_decimal() {
    let result = parse_decimal(&"1234x");
    println!("{:?}", result);
}
// fn parse_number(input: &str)->i64 {

    // in hindsight, didn't need error handling because I always peek
fn parse_number(input: &str) -> Result<(&str,Packet),&str> {
    match input.find(&[',','[',']']) {
        Some(index) => {
            let token = input.get(..index).unwrap();
            Ok((&input[index..],Packet::Int(token.parse::<i64>().unwrap())))
        }
        _ => {
            Err(input)
        }
    }
}

fn parse_rest_of_list(input: &str) -> Result<(&str,Vec<Packet>), &str> {
    match input.chars().nth(0) {
        Some(']') => {
            // list is done
            Ok((&input[1..], vec![]))
        },
        // we must either be starting a new list or reading a number
        _ => {
            // here's the recursive list-reading bit; parse one element and parse the rest and concatenate
            match parse_packet(&input) {
                Ok((remaining_input,packet)) => {
                    let mut new_list = vec![packet];
                    match remaining_input.chars().nth(0) {
                        Some(']') => {
                            Ok((&remaining_input[1..], new_list))
                        },
                        Some(',') => {
                            let remaining_result = parse_rest_of_list(&remaining_input[1..]);
                            let remainder = remaining_result.unwrap();
                            new_list.extend(remainder.1);

                            Ok((remainder.0, new_list))
                        }
                        _ => {
                            panic!();
                        }
                    }
                },
                _ => {
                    panic!();
                }
            }
        }
    }
}

#[test]
fn test_parse_rest_of_list() {
    assert_eq!(Ok(("",vec![])), parse_rest_of_list("]"));
    assert_eq!(Ok(("",vec![Packet::Int(50)])), parse_rest_of_list("50]"));
    assert_eq!(Ok((",",vec![Packet::Int(50)])), parse_rest_of_list("50],"));
    assert_eq!(Ok(("]",vec![Packet::Int(50),Packet::Int(60)])), parse_rest_of_list("50,60]]"));
}

fn parse_list(input: &str) -> Result<(&str,Packet), &str> {
    // skip first character, always [
    assert_eq!(input.chars().nth(0),Some('['));
    let result = parse_rest_of_list(&input[1..]);
    let unwrapped = result.unwrap();
    Ok((unwrapped.0, Packet::List(unwrapped.1)))
}

#[test]
fn test_parse_list() {
    assert_eq!(Ok((":)",Packet::List(vec![Packet::List(vec![]),Packet::Int(55)]))), parse_list("[[],55]:)"));
    assert_eq!(Ok(("",Packet::List(vec![Packet::Int(3),Packet::List(vec![Packet::Int(4),Packet::List(vec![Packet::Int(5),Packet::Int(6),Packet::Int(7)])])]))),
        parse_list("[3,[4,[5,6,7]]]"));
}

// either be a list or a number
fn parse_packet(input: &str) -> Result<(&str,Packet), &str> {
    match input.chars().nth(0) {
        Some('[') => {
            parse_list(&input)
        },
        Some(character) if character.is_numeric() => { 
            parse_number(&input)
        },
        _ => {
            panic!();
        }
    }
}

#[test]
fn test_parse_number() {
    assert_eq!(Ok((",xxx",Packet::Int(572))), parse_number("572,xxx"));
    assert_eq!(Err("572xxx"), parse_number("572xxx"));
}
// fn parse_that_shit(input: &str) {
//     str.parse()
// }

fn parse_all(input: &str) -> Vec<Packet> {
    let mut packets : Vec<Packet> = vec![];
    for line in input.lines() {
        if line.chars().nth(0)==Some('[') {
            let result = parse_list(line);
            packets.push(result.unwrap().1);
        }
    }

    packets
}

fn order_proxy(packet0: &Packet, packet1: &Packet) -> std::cmp::Ordering {
    // "A more elegant solution is to use the FromPrimitive trait from the num crate coupled with syntax extensions from the num-derive crate."
    // yeah, fuck that for now. And this lets me flip the sort here
    match order(packet0, packet1) {
        1 => std::cmp::Ordering::Less,
        -1 => std::cmp::Ordering::Greater,
        0 => std::cmp::Ordering::Equal,
        _ => panic!()
    }
}

fn do_the_second_thing(input: &str) -> usize {
    let mut stuff = parse_all(input);
    stuff.push(Packet::List(vec![Packet::List(vec![Packet::Int(2)])]));
    stuff.push(Packet::List(vec![Packet::List(vec![Packet::Int(6)])]));
    stuff.sort_by(order_proxy);
    println!("{:?}", stuff);
    let position0 = stuff.iter().position(|x| x==&Packet::List(vec![Packet::List(vec![Packet::Int(2)])]));
    let position1 = stuff.iter().position(|x| x==&Packet::List(vec![Packet::List(vec![Packet::Int(6)])]));
    
    (position0.unwrap()+1)*(position1.unwrap()+1)
}

fn main() {
    let answer = do_the_thing(get_puzzle_input());
    println!("first answer: {answer}");

    let answer2 = do_the_second_thing(get_puzzle_input());
    println!("second answer: {answer2}");
}


fn do_the_thing(input: &str) -> i64 {
    let mut lines = input.lines();
    let mut pair_index = 1;
    let mut sum = 0;
    loop {
        let line1 = lines.next();
        let line2 = lines.next();
        let packet1 = parse_list(line1.unwrap());
        let packet2 = parse_list(line2.unwrap());
        if order(&packet1.unwrap().1, &packet2.unwrap().1)>0 { sum += pair_index; }
        pair_index += 1;
        match lines.next() {
            Some(_) => {},
            None => {
                break;
            }
        }
    }

    sum
}

fn order(first: &Packet, second: &Packet) -> i64 {
    match first {
        Packet::List(list1) => {   // counting starting from 1? what's wrong with me
            match second {
                Packet::List(list2) => {
                    if list1.len()==0 {
                        if list2.len()==0 {
                            return 0;
                        }
                        else {
                            return 1;
                        }
                    }
                    else {
                        for i in 0..list1.len() {
                            if i >= list2.len() {
                                return -1;
                            }
                            let order = order(&list1[i], &list2[i]);
                            if order != 0 {
                                return order;
                            }
                        }
                        // if there's still material in list2, we're in the right order
                        if list1.len() < list2.len() {
                            return 1;
                        }
                        return 0;
                    }
                }
                Packet::Int(x2) => {
                    return order(first, &Packet::List(vec![Packet::Int(*x2)]));
                }
            }
        }
        Packet::Int(x1) => {
            match second {
                Packet::List(_list2) => {
                    return order(&Packet::List(vec![Packet::Int(*x1)]), second);
                }
                Packet::Int(x2) => {
                    if x1 < x2 { 
                        return 1;
                    }
                    else if x1 > x2 {
                        return -1;
                    }
                    else {
                        return 0;
                    }
                }
            }
        }
    }
}

fn crack_packet_list(packet: &Packet, index: usize) -> &Packet {
    match packet {
        Packet::List(list) => {
            &list[index]
        }
        Packet::Int(_) => {
            assert!(false);
            packet
        }
    }
}

#[test]
fn read_packet_12345() {
    let input = "[1,2,3,4,5]";
    let result = parse_list(input);
    let packet = result.unwrap().1;
    assert_eq!(&Packet::Int(1),crack_packet_list(&packet, 0));
    assert_eq!(&Packet::Int(2),crack_packet_list(&packet, 1));
    assert_eq!(&Packet::Int(3),crack_packet_list(&packet, 2));
    assert_eq!(&Packet::Int(4),crack_packet_list(&packet, 3));
    assert_eq!(&Packet::Int(5),crack_packet_list(&packet, 4));
}

#[test]
fn pair_1() {
    // [1,1,3,1,1] vs [1,1,5,1,1]
    let first: Packet = Packet::List(vec![Packet::Int(1), Packet::Int(1), Packet::Int(3), Packet::Int(1), Packet::Int(1)]);
    let second: Packet = Packet::List(vec![Packet::Int(1), Packet::Int(1), Packet::Int(5), Packet::Int(1), Packet::Int(1)]);
    assert_eq!(1,order(&first,&second));
}

#[test]
fn pair_4() {
    let first = parse_list("[[4,4],4,4]");
    let second = parse_list("[[4,4],4,4,4]");
    assert_eq!(1,order(&first.unwrap().1, &second.unwrap().1));
}

#[test]
fn pair_8() {
    // [1,[2,[3,[4,[5,6,7]]]],8,9] vs [1,[2,[3,[4,[5,6,0]]]],8,9]
    let first: Packet = 
        Packet::List(vec![Packet::Int(1), 
            Packet::List(vec![Packet::Int(2),
                Packet::List(vec![Packet::Int(3),
                    Packet::List(vec![Packet::Int(4),
                        Packet::List(vec![Packet::Int(5),Packet::Int(6),Packet::Int(7)])])])]),Packet::Int(8),Packet::Int(9)]);
    let second: Packet = 
        Packet::List(vec![Packet::Int(1), 
            Packet::List(vec![Packet::Int(2),
                Packet::List(vec![Packet::Int(3),
                    Packet::List(vec![Packet::Int(4),
                        Packet::List(vec![Packet::Int(5),Packet::Int(6),Packet::Int(0)])])])]),Packet::Int(8),Packet::Int(9)]);
    assert_eq!(-1,order(&first, &second));
}

#[test]
fn test_do_the_thing() {
    let sample_input =
"[1,1,3,1,1]
[1,1,5,1,1]

[[1],[2,3,4]]
[[1],4]

[9]
[[8,7,6]]

[[4,4],4,4]
[[4,4],4,4,4]

[7,7,7,7]
[7,7,7]

[]
[3]

[[[]]]
[[]]

[1,[2,[3,[4,[5,6,7]]]],8,9]
[1,[2,[3,[4,[5,6,0]]]],8,9]";
    assert_eq!(13, do_the_thing(&sample_input));
    assert_eq!(140, do_the_second_thing(&sample_input));
}

fn get_puzzle_input() -> &'static str {
"[[],[],[[],10,[[7,0,1,1,10],9,6],[1,[4,9,1],6,[4,6,0]],[0,3,0]],[1,[10,[7,4,3,4],[]],[2,2],7,[[10],5,3]]]
[[8,1,[2,3,3,[6,7,7,2,6]],[[8,10,1]],[9]],[1,7,[7,[3,6],7,7,10]]]

[[[[3,0,4,4],9,2],8,[[1],3,[2,0,9,3],[5,3,6,4,5]]],[],[]]
[[[],[]],[[[8,4],[5,5,9,9],[1,9,1,8],0]]]

[[5,[4,[8,3,4],1,1,[3,8,9,4,0]],4]]
[[7,1,[[9,0,5,5,9],[5,0,3],[0,5,5,10,0],3,7],1],[9,[[1,6,3,2,2],7,[8,9],[7,7,2,10]],[],[]],[[8,0,[0],5],[[3]],3,[[1,0,0,9],[10,7,0,10]]],[[],8,2,3,[[10],[10,6,10],0,9]]]

[[4,8,6,8]]
[[[3,[],[4,7,4,4],1],1,[6,[5],[1,1,6,8]],3,10],[2,[3,6,[],6],10]]

[[1],[[0],5]]
[[10,[[2],10,[6,4,0],[],9]],[4,9,[[9,6,10,7]]]]

[[8,[[4,1,1,4],[6,10,6,6],7,6,[9,9,1]],[[0,9],3]],[1,[5],5,[]]]
[[],[[]]]

[[[[3,9],[],[5,9,8,3]],2,5,9,8]]
[[[9,0],4,[9,10],[5,6,10,0,[6]]]]

[[],[9],[4,[[10]],8,10,[10,10,[],[]]],[[],[[10,4,6]],[[1,1,6],[]],5],[[[1,7,5],[10,1,6],6,[]],[],2,3,9]]
[[],[[4,[5,4,8,7],[10]]],[10,7,[3],8],[[6,[1,2,9,5]],[],[[2,4,3]],[3,[3,8,9,8],[9]]],[[[6,0,0,7,3],9,3],[9,[0,4]],[[8,8],[2,1,8],[]],3,[]]]

[[[9,0,9],3,10,5,7],[8,10],[[[1,6],[3,5,2,7],[2,3,0,5,8],[1,3],10],[],8],[[4,[]]]]
[[7,[3,10,3],[[],[3],2,[5,4,3,10]],5,2],[6],[3,[],[[3,0,4,0]]]]

[[[10,3,[8]],10,1]]
[[[],5,1,[10,[3,8,7],[5],[1,3,6,0],[4,8,10,6]],[[7,7,1],[0,2],8,[2,1,9,8],8]]]

[[6,[9,[1]],10,[7],10],[[10,4,9],5]]
[[6,10,[[7,10,1]]],[[[2,9,0,3],[4,5,10,0,6],[2,4,2],9]],[],[[[5,0,8],[2,2,1,1],[1,6],5],[]]]

[[3,10,[7]],[4,[[0,3,8]],5,10],[],[[[8,9,4,8,10],[5,9,7,1,0],[6,5],8,7]],[]]
[[2,6,[7,7,[3,8]],[[1,6,7,1,9],7,7,[5]],3],[8,[8,[4,7,1,2,4],[2,8],[6,9,9,8,4],9],[[3,10,2,0]]],[[5,[6,9],[]],0],[7],[[[]],3,[3],1]]

[[6],[],[[[1,5,1,9,5]],7,10]]
[[],[5,[]],[[[1,2,1,1,7],[5,4,5]],8,3,3,8],[1,[5,[10,0,7],[7,4,9]]]]

[[1,2,8,[[4,10,2],[7,4,1,2,5],9],[7,0,[5,10,2,5,1],[5,4,9,2],0]],[1,10,[[5,10,4],[6],[8]],[[8],[2,9,10,1,3]],5],[[4],0],[]]
[[9,[[2,9,6,7],6,[6]],7]]

[[[]],[[],5,[2,3]],[],[8,[],3],[9]]
[[9,[6,6,9,[6,3,6,8],[]],[[],8,[0,8],[9],0],1,[]]]

[[0,[],10,[4,[8,7,10]],8],[[[],[10,6]]],[10,[1,[1,8,1,2],5,2],[[0,8,0],[1,9,1,1],[3,8,3],0],7,[0,5]]]
[[8,4,[6,9,2,[4,5,6],4],[[10,9,0,0,1],[6,7,8,8]]],[[[2,5,6,1],2,8,[6,8,3,9]],[[4,10,0]],0,9]]

[4,6,8,10,9]
[4,6,8,10]

[[[10,2,[0,1,2,0],0],7,[2],[[],[0],9]]]
[[],[[]],[9]]

[[1]]
[[],[[10],10]]

[[],[],[],[[[1]],9,10,[1,0,5]],[]]
[[6,[[4,4,9],[10,3,10,1,4],[10,5]],4,[[1,7,5,0,1],[3,7,10,1,1]]]]

[[[[9],[8]],[6,3,4],5],[[6,3],[7],[[5,10]],10],[],[3,5,[3,0,[0,3,3]],8,[]]]
[[3,[10,10],4],[8,[[7,1,0,6]],1],[8,[[5,0,7,4],[1,4],1],5,[[7,1],[2],[0,9,5,7,5]]],[[5,[6,3],[0,8,3,2],10,[10]]]]

[[],[[[1],0],[9,7,7,[3,9,3,9,10]],8,[5,10,[5,5,8,3,7],7,[9,0,7]]],[[8,2,[0],7],4]]
[[[8,0,4],5,3,2,5],[4,7,6]]

[[3,1,[[6],[2],[4,8,7,10],2],1],[[[6,2,8,6,4]],6,[9]],[8,[0],1],[]]
[[],[[[0],3,[2,10],10,[2,0,6,3]],9],[1,[[],10,[],8],[[6],2,7,8],[10,[4,3,4],[10,3,5,3,5]]],[[2,[],8],2,0,8]]

[[],[[[1,7],[0,2],[3,2,8],[7]],0],[1,[1,[7]]],[6],[[[7],[],[8,8,10],[0,5,1]],2,5,[[4,6,6,8],8,[0,9,4,5,4],4],[1,5,6,[2,4,6],[4]]]]
[[4,[5,[5],6]]]

[[[[6,10,4],7,[],[5],[5]],1,9,7]]
[[[]],[[[5,0,6,3,5],[]],8,[8,10,5,2],4,10],[7,[[8,0,9],9,[6,9],1,1],4,10],[6,4,6,9,5],[]]

[[[],1,9],[6,3,[[8,10,4,1]]],[[[0,4],9,7,[0,0,5]]],[[]]]
[[[9,3],[[]]]]

[[9,0,8,0],[[1,[0],8,[]]],[],[5,8,[[8,9,0,8,0],0,8,[],[]],[1,2,5],[[],5]],[[3,1,6,[],[4,9,3,6]],[5,[10,10,4],3]]]
[[6,[[],2,9],[1,9,[6,2,5,1],[1,5,0,8]]],[[2,[4,4,2,6,1],6],[],[],8,[[]]],[[[7,8,10,2,10],[1,4,9,5,2],7,[6,6,4,10,9],[7,3,3,0,0]]],[],[7,3,[2,[1,2],[2,2]]]]

[[1,[[2,6,1,6],[4,6],[3],[],[1]],8],[[8],6,5,[5,[4]],6],[[[],5,10,[10,7],[3,7,5,9,10]],0]]
[[[9,[7],1,[],5]]]

[[[9,2,1,0,6],[[0,4,8],5],[[],[],0,[8]]],[[[],2],[[7,7,7,8,10],10,[0],[0,2]],[],[]],[],[]]
[[],[5],[[[],5,[8,8,1,5],9],[7],[1,3,5,[0,0,0]]],[]]

[[[],[5,4,[],10,[1,8,1]]],[7],[[[1,4,10,10,4],[],9,[7,10,10,0,2],[10,4]],[4,[3,5,1],6,1]],[[[1,1,9,3,5],10,[2,1,3,9,3],[6,10]],[[],[]],2]]
[[[[1,3,7,8,5]],[1,[1,8,3],[4,1,3]],0,2,4],[],[],[[5,[7,9,2,5,2]],[[10,10,10,8,3],2,[]]]]

[[[[1,0,3],[10,8],[],[9,1,9],[0,5,2,4]],[],3,[[6,8,7],[6,0,7,1,0],3,10],2],[1,7,[4,[5,7],[4,6]],9],[[],[[1,2,0,5],1,3,[9],0],5],[]]
[[[[7,7,1,2]]]]

[[5,9],[[9,[1,9,2,2]],[[],8,[1,1]],[[],[6,4,0,3,3],[8,0]],[8],7],[[1],5,6,10],[]]
[[[]],[[[0,2,8,5,4],[4,5],5],7],[[[0,10,3,4],8,[0,7,10,2],[6,1,9,9,10]],9,2,6],[1,[2,7,[6,6,2,2],[10,0,9,4,3],2],6,[[2,1,4,1],10,[7,5]]]]

[[[[5,2,7,9],[10,0,8,1,1],[]],[6,6,3,[8,7,1,9,1],4],[[6,1,4,8,1]],[0,[5,10,2],5],1],[[],[5,10,1,4]],[0,[10,10],[1,[7,0,5],[4],[10,5,3,4,2],[8,10,1]],[],[5,[0,6,3,7,4],2,9,4]],[[6],[],0]]
[[[2,[10,9,9,9],7],[9,[1],10],1,[[5,10,5,4],2,1,1,[]],[10,[2,10],[0,7,2,5],0,1]]]

[[[4,9,[5,6,9,6],[7],[0,9,5,8,1]],[[8,0,2,5]]],[],[6,[[7,10],9]],[[5,2,[]],2],[[9,0],5,[[2]]]]
[[[]],[],[[[2,9],0],2,[[6,2],6,[3,8,1,1],1]],[]]

[[3,6,4,[2,5,0,[8,6,8],4],[[1],[5]]],[0,[2]],[],[5,[],[5,4,[10,9,4],9,6]]]
[[[[5,10,3],6,[2],[]],[[8,1,7,7,10],0,[6,8,9,3,9],[10,5,4],[9]],[[]],[[6,1,4,3,9],[10,9,9]],8],[9,7,6,[[3,8,0,1,1],1],8]]

[[[[0,3,8,10,5],2,[],[],[9]],3,6,[5,[0]],[5,[]]],[]]
[[0,3]]

[[[3]],[9],[],[[4,1,9,[5],[]]]]
[[[9,[5,6,3],4,[4]],[[],[5,6,4],[7,5,10,8]]],[[0,[8,3],4,6,[9,9,4,1,0]],[[3,5,1,7]],8,[]],[[],0,[8,2,9]],[4,[[],5,[10,10,10,6,6],[8,7,3]],[5,[1]]]]

[[[[1,0,3,6],6,[10,10,6,8]],[]],[[1,2,[9,7,1,10],[]],[[10,3,0,8,8]],2,8,[7,4]],[[[10,8,4]],[2,3],6],[[[10,6],[5],9,1],[],7]]
[[],[[],[[3,8,4],0,[]],[],6,[[3,7,1,0],10,8]],[[9,4,[]]]]

[[[8,[4]],6,3,10],[[5,1,8,[0,6],2]],[],[[],[[10],[6,6],0,[1,7]],8],[[[1],0,5,[],10],7,2,[10,[8,3],9,3,[]],4]]
[[[6],3,[]],[[[1,3,1],[1],[9,7]],[6,[1,9,9,7,9],2]]]

[[],[[8,4],0,[10,[]],5],[5]]
[[[4,[],[],7]],[[6,[3,5],[0,5,8],8,7],[7,0,[8]]]]

[[[2,[6],[9,7,1,2,5]],8,[3,[4,0,4,7,3],[],3],[[1,3,1,8],[5],4],4],[10,4,7,3],[[]]]
[[9,0,7,[],[8,5,10,[2,0,1,7,4],6]],[[8,[],10,6],1,[[5,0,7,0],[]]],[[9,[8,4,0],[0,8,8]]]]

[[[7]],[[3,1,3,[6,3],8],[],[[10,3,1,5],[9,5,6,4],1,[],5],2]]
[[5]]

[[[1,2,0],[[2,7,3,5],0,[9,7,0],10]],[6],[3,7]]
[[[[6,0,7],7,0],0,6,2,2],[5,6,5,7],[8,[]],[],[[[1],[0,5,10,6,9],[10],8,10],[[8,10,8,7],[],4]]]

[[4,[6,2,[9]],3],[0,8,10,[[2,9,1,1,8],7,5,5],[9,[],6]],[],[4]]
[[9,[[10,3,10,8]],4],[0],[],[7,[[5,0,9],9],[[7,5,3,9,0]]],[]]

[[[7],1,[9,0,4,[4,10,9],[4]],10],[6,4,[[]]],[[[3]],[[4,1,0,9,4],4],9,[[9,0,2,10]]],[[2,9,[0,3,10,7],8,8],[[10]],5,[[3,7,4]]]]
[[[10,[7,0],0,6,[3,3]],[[3,5,10,3]]],[[[1,6],[2,7,3,3,8],[8,0,7,3],8,[10,9,7,8]],2,[7,[1,9,0,9,1],2],[5,10,0,8,2]],[[[9,6,9,0,3]],9,3],[[[6,8,9,8],[0,2],[4,1,0,6,5],7]],[3,[[1],[7],1],[[3,7],10,[8,4,7,6],10],[9,[3,5,3,9],[6,3],3,[3,1]],[[5,3,10],[10,10,5,7],7,[0,1,5,1,3],8]]]

[[10,[8,[7,7,3],7,[5,3,8]],[1,2,10,[]],6]]
[[3,[3,[7,6,3,6,10],9,[6,9,1],[1,3,1]]],[3,[8,10,[1],[8]]],[[[1,4,4,8]],[]],[[2],[[4,8],[9]],[[5,3,5,4]],9,[2,10]]]

[[4,1]]
[[[10,[5,5,9,2,6],[],[3,2,0,4],10],[6,[8,7,7,4]],8,[]],[3,[0,[10,10,10,1]],[0,8,4],[[4,4,10,7,1],2,[],[2]],[5,2]],[[[10,6],7,[8,6,3],10,[5,8,0,6]]],[],[[]]]

[[[],7],[3,[5,[5,8,8,7,4],[2,6,2,10]],2,7,8],[5,[[],[1,8,1,2,5]],0,0],[]]
[[4,[3,7,0,9],8,0],[[[3,2,3],8,[10],[7]],9],[1,[[],[2,3,1],2]],[0]]

[[[[8,2,1],8,10,10]],[[5,4,[4,9,2,6]],3],[],[10,[[3,8,7,4],8,7,[3,10,1,2,7]],[4,5],1]]
[[4,[],4,[2]]]

[[[10,4]],[0,1,[]],[],[9,10,10,2]]
[[],[[[7,9],10,8]],[8,4,2,[[6,7]],5]]

[[],[[[0],2,7,[8,5,6],[6]]],[[3,[0,9],1,[9]],2,[[6,5,2,7,9],[],[3,8,3,0,2]]],[[3,[],[10,2,9,2],[9,3,1]],[1,7,[6,2],[9],6]],[[[10,4,0,9],[8,8,0],10,2],[8],6,[4],3]]
[[[[5,0],6]],[10,[]]]

[[[7,[4,6]],4,[5,7,[8,5,3,5],[2,9,5,5,5],7]]]
[[[[8,2],0,[0,8,10]],[],[8]],[[[1,10],10,1],[10,[5,1,4],6,6,0],6,[9]]]

[[[[4,9,7,1],[8,0,10]],[[8],0],9],[4,[7,[5,10,9],8],[[],[3,4],[9,4,9],[2,9,9]]],[],[],[[3,0,[7,8,5],9,2],[[],[],[0,5,2,1,1]]]]
[[0,[],9],[],[]]

[[5,[5,[5],[]],8,0],[3,[[]]],[6,[[7],[6],8,7,2],[[]],[],4]]
[[6,2,3],[0,[[6,1,9],[2,10,5],0],[1,0,8,[10,0,9],[]],[[0,1,5,2,2],[],1,1,6],[[4],[]]]]

[[[0,[5,9,0,1],5,[3,6,4,7],[3,0]],[],[7,[],4],1,[7,4,8]]]
[[[[2,0],0,[],6,1],[],[]],[1,5,[[],[3,0,3]],[6,3],[]],[[[9,9,0,3],5,[]],0,[[5,3],[6,9],[3,0,4,5,3]],[[7,6,2,6],[]]]]

[[5,[[3,5,10,7],3,[]],4,[]],[8,4,9,0],[[2,[10,2,8],[8,6,10],[9,8,0,3],[0,5,5]]],[[[6]],[6],3,4,[]]]
[[[],[],0,2],[0,[[9,1,4,8,5],2,7]]]

[[9,6,[4,[7],[9],10,5],[8,[4,5,1,0,3],[9,6,7]]],[8]]
[[2,[5,[6,1,3,6,8]],7],[[5,3,7,7,0],10,[8,6,6],[[1,2,3,8,5],[6,5],[9],[]],6],[[5,5,[],[0,4,5,5]]],[[5,2,2],5,[8,8,[8,9,5,1]],[],[6,7,3,8]],[8,3]]

[[9,2,[[],8,7]],[[[]],4],[[],[8,[6,1],[3],8],[[8,0,0]],3],[7,4,[[3,5,8,9,0],3],[],5]]
[[9,0,[],[2,[6,2,1,7],1],[10,2,[6,2,7],[9,2,0],[8]]],[3,9,6,[6,0]]]

[[0,[4,[],[]],[]],[[8],[],5,0,[]],[10,[7,9],[3,5,5],[3,[3,3],[6,7,3],[4,0,2],[6]]],[5,[],10,8]]
[[1],[],[[]],[7,[[],[0,1,3],[2],[],[4,0,7,7,9]]]]

[[[8,[2,4,7]],0,[0],[0,[],1,0,7],7],[0,8,4,4,[6]],[[],6,[[10,2,8,8],8,[7,2,4,9],1,5],[0,4,10,9]]]
[[[1,[7,6,1],8,[6],[5,9,8]],1,[[3,7,3,7,2]]],[],[8,[4,10,2],[8,[]],4,5],[[3,[5,10,1,6,10],2],10,0,[[10,2,2,5,5],9,[4,3,7,4],6]],[0,8]]

[[[0,[],[2,5,7,8,10],[4,0,7,7]],1,2,4,7],[[7,[6,0,0]],[2,[],9,[7,0,5,7,10]],[[0,7],[],[3,10]],[1,10,8,0,[1,8,5]]]]
[[],[8,[[1,10,3]],0,[],[[],8,5,4,7]],[[0],5,5],[[4],[5,8,[6,2,8],4,[1,4,2]],2,[[7,7,3]],[6]]]

[[8,[[6],1]],[0,8],[[7,2,[6,1],3],9,[6,[2,5],[5],[6],[6,1,0,1,10]],3,[[1,9,3,7],2,[]]]]
[[6,[]]]

[[6,6,[5]]]
[[9,[[],[4,8,1,2,10],[2,9,6,1],2],[[5,4]],3,[4,[1,1,10,5,10],4,[0,0],[7]]],[],[2,[1,[3,1,7,1],10,3]],[[[9,7,3,4]]]]

[[[]],[[8,[3,5,5,7,1],0],[10],0],[5,2,[[]],[2]],[]]
[[6,0,5,[[1],[6,8],3]]]

[[10,[3,[],10]],[0],[[4,[],2,7]],[[9]],[[[0,7,5],[]],[[9,4,4],[1,5,8],[4,10,7,6]],[[8,5,4],8,[9,3,1,4,2]]]]
[[1,[1,[5,2,7],0,[6,4,8,2,4],10],[],9,[1,3]],[[7,9,7,[7,5]]],[[[0,10,6,1]],[7,[8],6]]]

[[[0]],[[9,10],[9],[2,4,9,3],[[],[],1,7],10]]
[[[[0,7,4,7,7],[3,6],[5],[1]],[],[8,9,[2,5],[10,3,10],[10,4]]],[[[9,7,1,6,2],3,0,[7],1]],[[7,[4,3,6,6,9]]],[[],[],[[],[8,8,2],3]],[[9,[8,2,5,4],[8,9]],[]]]

[[[],[4,[7,5,10],9,6,10],4,3],[]]
[[6,4]]

[[[[],0,[8,8],3,[]],4,[4,[9],1],[[5,7,6,1],4,5,7,[]]],[1,5,1,[10],[]]]
[[[[3,8,9,2,7],[3,0],2],[2,[8,0,4],2,5],[[8,0,6,0,2],[0,4],4,[5,10]]],[2,[]],[[1,[5,9,9,1],[10,7,2,10],3]]]

[[],[],[8,[[6,1]],9,[1,3,2],8],[5,2,[[7,7,8],[9,5,0],[10,4,7],2,[0]],7,5]]
[[0,1,10],[4,3,[0,[5,4],4,5,2],[7,7,8],[[6,8,1,1,4],[6,3]]],[[[9,7,7,5,0]],6,[[5,0],[4,7,0],[5],9,8],[],[1,[8,8,9],[8]]],[[[7,8],6]],[]]

[[[[9,9,7],7,1,4,[9]],[],[4,8,6,[7,4,4,4],0]],[[2,[3,6,2],[0,8,0],[9,3],2]],[[[8,10,1],[9,7,8],[0,8,4,7,7],[0,7,7],5]]]
[[6,[[]],0,[[],[2,3],1],7],[],[0],[2,[5,0,[2,5,8,6,2],3],[10,[0,10,5],[9,7,3,7,10],[]],[9]]]

[[1],[[[],[5,4,4,8,8],6,3],6,[8,0],1]]
[[[1,9],1],[]]

[[[[0,6,6],[],0,3,[4,4]],[[10]]],[[[0]],8,0,0,9],[0,10,[7,[3,1,10],5,6,[1]],2,1],[[5,6],[[10,2,9,5]],6,[]]]
[[],[],[[]],[[[6],[2,0,7],0,10,5],1]]

[[[[8,0,3,6,10],[4,8],5,9,[7]],[[8],[3,10,2,10],[4,5,4,7],5,[]],0,7],[2],[3],[[5,6,3,4],[[2,0,3],[6,0,9,0],3,[2,5,4,1,6]],[4,[3,4,10,1],1,0],[7,[5,2]],3],[8,6]]
[[3,9],[5,[9,1,[7,1,1,8,7]],[6,[2],[4,8,4,2,10],[6,4,5,0],[]]],[[[1,2,3],[8,6,9]],7]]

[[[0,7,2,4,0]],[6,2,7,10,6]]
[[0,1],[2],[6]]

[[[[5]],4,2]]
[[[],7],[[[4,1],4,[2,0,3]],5],[[8],[1],2,[9,8,9,0,[2,3,9]],[9,[10,8,2,4,0],9,[6,0,2],6]],[[[5,5],[],1,5,[10,0,7,4,10]]],[8,7,3]]

[[[[1,1,1,9,2],[1,9,7,4,4],[],[0]],[2,[5,9,4,4],[7,5]],4,7],[1,7,5,[[],2,5]]]
[[2,[[7,6,4],[3,5,3,10,4],5,[8]],8,4,3],[1,5],[],[2,[[0],[4,5]],[8,[9,8]],[8,[]],0]]

[[5,[[3,8,7],[10,9,4,3],[1,9,9,4],4],6],[[3,1,0],[[2],6]],[[1],0,[[4,3,1,2,0]],7],[]]
[[9],[],[0,10,0],[1,5,[[8,6],[9,8,0,9],6,[0,10,1,9]],[[3],[2]],0]]

[[9]]
[[6,[[],2,3,10],7,8],[],[[3,9,0],5,[[4,0]],2],[[],2,3,[[2,6,0,5],10,6,[1,0,0,0],2],1]]

[[],[3,4,[[],[],[],[]]],[3,[8],[],8,[8,[0,10,0],2,3]],[[2,[8,7,3,5],[0,10,6]],5,[[7,10,6],[3,7,9,7],5,[8,4,2],9],5],[[0,[8,0],5,[4,6,4,6]]]]
[[5],[4,1,[[],7,[6,0,6,9]]],[[[6,3,3,9,8]],[],0,[[3,3],[8,7,8]]]]

[[[[10,4],[0,7,7,9],[10,6,0],[2,7,1,5,3],4],[4,[4],[1,8,0,2],[5,8,4],7],[9,10,6],3,5],[[[1,10,3,10,9]],4,[3],[7,0,3]],[7,[],[[2,5,1,3]],[7,[2,2,4]],[[4,6,4,10],2,[6,7,8,6],[3,7,3,2,0],1]],[3,2,[[2,3,10,2,0],9,1,[]]]]
[[9],[2,3,[[],9]],[[2,10],[]],[9,[2,[4]],7,[6,7,[10],[10,8,2],0]]]

[[1],[[6],4,0,[7,4,6],5]]
[[[[6,6,9],[1,2,2],[5],6,[8,8,8]],3],[[[],2,0],[],[],3,[[5,0,0],[2,0,1,5],0,[9]]],[[[],9,7],3,9]]

[[5,9,[],9,4],[[[9,8],0,2],8,5,[7,7,10,2]]]
[[[5]],[7,4,6,7],[],[[2,[3,5],[7,8],0],[]],[]]

[[[[5,9,9,8]],[8,[8,1],8],6],[[8,[4],8,8,[8,5,6]],[8,[],2]],[0,4,6],[],[7,[2],[4,5,[10,8],[1,6,3]],4,[10,[7],3,7,3]]]
[[0,[2],[],[5,[2,7,4,4,0],7,4]]]

[[10],[[[1,3,6,10],2,1],0,[],[3,[8,5],[3],8]],[0,[2,[],4,[1,10],[6,1,6,6,8]],[3,[0,8,7,3],10,9,5],6],[7]]
[[9,[]]]

[[],[[9,[],1],[9,[0,2,0,7,8],8,10,[0,6,3,5,0]],[10]],[7,1,[[6,2,3,0],0,5,4],10,[[1],6,[9,4,7,3],[6]]],[0,10,[6,[8]],5,[2,2]],[9,1,2]]
[[2,6,5,[2,7,[7,6,8,4,0]],[[3,0],3,[6,7],[10],4]]]

[[[],7,10,[[],7],3],[8],[[[],[7,8,0,0],[2,9,5,3,2],0],6,3]]
[[[[1,1,9,2,1],[],7,[5,8]],[4,[8,4,1],9],[[4,4,6],[5,8,2],[5],[5,7,0]],7,[0,3,[10],[],[4,2,0]]],[],[],[1]]

[[],[0],[[[8,0,7],5],0,[10,6,9,10,5],10,[]]]
[[[0,[6,1,6,10],[10,3,7,3],[1,4,9,3,8],[5,9]],0,[10],8,10],[],[7,3,[5],1]]

[[2,6],[8,0,[[10,8,7],[],[],[7]]],[[8,4],[],9,[7],2],[0,6],[[5,9],[2],[6,10,[3,2,2,6,0]],7,[[2,6,0,8,5],[],[9,4,10],2]]]
[[[2,[],0],[[1,10,7,0,5],[7,9,7,2,5]]],[[[0,5,7,2,5],4,[],2,4],9,2,[]]]

[[[[],8,6],[[5,7,0,8],1,10,9,[4,4,7,7]],6,[[10]],[]],[[10,3,[5,7,9,2,7]],[[10,0],5],[7,10,9],4],[],[[0,0],6],[]]
[[],[[[0],1,5],5],[[[6,2,4],0,[],6,5],[[7,1,8,1],[9,9,10,5,5],10,1,1],[3,10,10,10],2],[],[1]]

[[[],[[5,4,1,5],0,[],6],[6]],[4,0],[]]
[[[[],2,5,2,3]],[[[6,5]],[]],[[5,0]],[[],6,[[4],10,[0,7,9]]],[]]

[[[3,7,[8,4,7,6,3],[5,1,7,6],[2]],8,3,[[0],1,[10,2,6,3,8],[9]],[5,6,1,[],[9,6,7]]],[[10,7,6,[7],[1,3,4,2,4]],[7,[5,2,5,9,0],[0,1],[5,10,6]]],[[[6,2,0],6,3,9,[3,3]],[7,8]],[0,1,[[5,9,6]],[[9,8,10,0],[6,3,7,8],8,5]]]
[[],[[9,2,[0],[7,4,9,2],7],[[],[1,4,5,4],[2,10,8],0,5],1,3,[[7],9,9,[5,7]]],[[],4,[6,3,[3,0,1,6],5],[[],3]],[],[6,[1,[3,10,9,10,10],8,5,[4,3]],[10,4],[9]]]

[[[[7,2,3]]],[6]]
[[[2,[3],[]],4,4,8]]

[[0,[10,6,[6],4,4]],[6],[[6,[8,4,6,7],7,7,0],9,[],10],[[[5,5,10]],9,[[10,6,5,6]]]]
[[6,2,1,10]]

[3,6,5,10]
[3,6,5,10,10]

[[4],[1,[10,[2,9,9,1,6],[],7,[9,3,8,9,0]],[10,[9,7,2,2,3],[0,2,3],5]],[[10,[10],[9,2]],6,7,[4,[1],[]],[[],10,[9,7,5,4],[1,4,3,3,4]]],[]]
[[10,[9,[],0],4,[[],10],[0,0,6]],[],[5,[],8,[7,7,[4,7,0,9,6],5,1]],[],[[7,9],[[],5,5,[]]]]

[[[],0,5,[3,[5,1,1]],5],[[4,[6,5,2],[0,9,7,0],1,1],[],[1,10],4,10],[9,[1,9,9],[10],[[5],[5,9,0],[2,9,5],[7,2,3],1]]]
[[4,10],[5],[[[2,0,7],5,[0],[],[4,10,3]],1,[[9,4,4],6,[8],[7],0],[],[1,1,[8,4,5,7],[3]]],[7,7,[[],[1,1]],2,7],[9,[[2,6,9],[6,5,6,2,4],[4,8,10],[3,0,2,9,10],8],6,3,[[7,2,7],[3],[4,3,10,1,3],[5,2,10,4,5]]]]

[[[7,[4,7],[8,8,2],[6,3,9]],[[1],0,[10,3,10,7],[9,2,9,4],1]]]
[[],[[1]]]

[[[[4,1,10,4],2],[],[6,[]],5],[[[5,3,4,8],10,[]],[10,4,[0,7,9]],[],7],[[],4],[3,4,[],7]]
[[[0,[2,5,1,5],6,[]]]]

[[[3]],[],[7,[[],[1,7,7,8]],[],[1,8]]]
[[[0,[5,5,9,5],1,5]],[],[[[7,4,1,2,3],3,[],3],2,[[6,0,4],[0]],[[4,4,2,6,6]],[[9,0]]]]

[[4,4,8],[0]]
[[6,5]]

[[5,9,[[5,5,3,3],[],[8,5,0,4,1],1,2]],[5,1,[3,4]],[8],[[[9],8,8,[8,0,2,3,8]],[8,[9],4,[7,1,0]],8,[]]]
[[],[0],[],[4,4,[4,6,[10,1,1,0]],5,[3,6,[2,1,2,1],[5,8,7,10]]]]

[[7],[[10,[4,3,6],[6,9,10]],8,2,10]]
[[3,2],[[7,[10,2,5,1],[2,7,0,0],[],[0,10,1,3]],9,7]]

[[[[7,7],[0,9,4,2],[7,0,2,9,6],2],2]]
[[[[5,5,9]],[[7,4,4],[9,6]],6],[6,[8,1,6],3,7,4],[5,[6]],[],[[0,5],[8,1,3,4,9],[[],[3,4,9,10],6],[10]]]

[[6,[1,[6],6]]]
[[6,[0,5],[[5,6,4,7],7]]]

[[],[[5,8],3,0],[[9],9,[5],[[],[3,2,4,4],1,[3,6,8,7,1]]],[[[],0,1],[3,5,[4,10,4]],[],[[2,2,5],[5,10],[6,6,10,0,7],[10,10,5,3,10]],[[1],9,5,[3,3,8,1,5],[5,4,5]]]]
[[[[10,4,3,7,7],[3,6,6],[],[3]]],[5],[8,10,[7,3,5],7]]

[[9,7],[7],[]]
[[5,[[8,8,8,3,9],5],5]]

[[1],[[3,[5,7],[3,4],[6,4]]],[[],[[6,7,5,8]]]]
[[[[6,8],[],[]],0,[4,[]],1],[]]

[[],[[5,[2,9,0],3],1,[[]],[4,10,[]]],[[0,3,[4,1],[5,9,0],2],1,[]],[0],[[[4],5,6,4,3],3]]
[[7,[4,[9,6,1,3]],[[9]]],[[6,[2,1,10,2],[9],8],[8,6],[[5,2,8,10,9],[8,8,3,0,5],[5,10,8,3]],[],8]]

[[],[3,[],5]]
[[2,[],[[3,10,6,10],4]],[],[0,[10,8,[4,8]],[8,3,[9,8,3],[3,6],[10,9,9,6]]],[[[4],2,2,4],9],[[],[[],5,[],6]]]

[]
[[],[[4],4],[[8],6],[0,1,3]]

[[[3,10,3,[9,3,9,9,4],8],[3,[]],[[7,8,6,0]],[[],[10,1]]]]
[[0,3,10,2],[[[1],10],[3,0,4],9,[[4,8,6,7],[0,8,5],[],[9,5,3,1,4]]],[0,5,8,2],[2,[]],[]]

[[[1,[]]]]
[[[],5,2],[],[[[8],[3,4,1,7],[0,7,10],7,[]],1,1]]

[[[[4],[0,9,7,6,0]],[[1,7,7,1,10],[],5]],[[0,[7,9,0,9,9],[3,10,6]],10,[[1,6],[10],[10],[6,2,2,2,4]]],[[]]]
[[[4,[],0,[2,7,8,2,3]],8,[9,0,[1,9,1,2]]],[],[8,[3,2,0,[1,1,7,0]],[8,9,3,[10,5,1,5,4],[9,3]],[6,8,4,[3,3,4],[5,2,3]],1],[[3],5,[],[6,[2,4,9],[2,3],2,[]]]]

[[0,7,[10,3],10]]
[[],[]]

[[[6,[6,6,5,6],[3],[9]]],[4],[3,[]],[[6,8,[3,0,6,7]],[5,[7,4,5,6],3,[0,7,2,8,3]]],[[10,7,10,2,3],[2,1,[7,2,10,1,3]]]]
[[9],[[],3,0],[8,[10,[9],10]]]

[[10,[[5,9],10,[10],[10,7],4]],[0],[0,[9,[5],[5,6]]],[3]]
[[4],[[[7,4]],0,6,2],[9,[4,2,5,[4,10,3,10]],[4,10,[4,0,5,1,4],1,1],10],[]]

[[[4,[9],8],[7,5],[],[[8],[],[6,9,10,4]],2],[],[],[],[[[3,10,0,3,0],[8],5,8],10]]
[[[[1,2,1],10,[2,9]]],[4,[[6,0,4,3],[10,2],[],2,1],[[3,3,10,0,9],[3,7,2,5],[5,9]],10]]

[[[[8],[3,2,9,8,6]],[10,[3],5]]]
[[],[[[8,3,10]]],[[4,[1,5,3,6,2],[3,6,5,8,7],7],0,[6,[10,4,9,8,9]],[]]]

[[9,[6],0,[9,[8,4,5,7]],[9]],[7,[[9,9,10],[9,4,0]]],[[4,[6,1,5,6]],[[6,7,0],[]],0,[[3,1,10,9,10],[0,6,6,10],6,[6,1,3,9,9],[9,0,10]]]]
[[0,[10],8],[]]

[[0],[7,[[7,7,9],6],2,[],3]]
[[[7,6,5,[9],[8,1,0,3]]],[4,[],[6,4,[7,6]],6],[],[[],0,9,8,[[8,5],6,1,[1,2]]],[[],4]]

[[4,[8,[5,1,7,6,2],6,[7]]],[[8,8,4],[9,5,8]]]
[[5,[[10],2,[8,7,7,0],[9,0,7,5],3],6],[],[4,3,[]]]

[[2,3,7,1],[9,4,[],[[8,2,9,0,3],[]],[[6]]],[]]
[[2,[[5,2,10,8],4]]]

[[[[3,7,0,8,3],4,10,[4],4]],[[[2,4],6,6,3],[[5,2,8],[6,3,6,6],9,10],4,[1,9,[],[1,2,4,8],2],9],[6,[[6],[2,9,8,7],1,[10,10,5,0]],[10,7,[8,0,2,6],10,3],1,3]]
[[8,[7,[4,10,6,5],1,[]]],[[[0,0,2,9]],[10,2,0,[10,9,7,9,1],4],[5]],[[3,[10,5,1],1]]]

[[]]
[[],[5],[0,9],[8,[[5],10,2],7,[[9,6,5],[9,6,4,1]]],[[[],[8,10,0,2],[0,9,3,7,2],3,[2,7,1,6]],2,[],[],3]]

[[[3,4,[7,2,4]],7,[1,6,[7]],6],[1,[[1],8,8],[1,1]],[[[5,3],[]],[1],[[4,2,1],3,0],6,0],[[[],[2,0,8,0]],5,[]]]
[[],[[4,9],[8,3,[]]],[7,1,8,0]]

[[[[],9]],[],[7,2,10,1,[[6],6,[],3,[]]],[]]
[[[[1,10]],6,[],5],[4],[1,[[1],2,[5,4,4,4,4],2],[4,4,[2,2,8],8]],[1,[],6,2,1],[[[2],[10,8,6],[6,3]],3,1,[9,3,10,9,3]]]

[[5,6,8,3],[9]]
[[[],4],[[[],2,10],[5,[9,9,3],0,[]],4,3,[0,9]]]

[[10,3,0,[[7],8,3,7,5]],[[[6,9],[3,5],2],2,[[7,7,10],[5]],0],[[8,6,4,10,[7,10,5]]],[[4,[],[10,2,7,10,3],[10,3,7]],3,7,7],[[[2,0,2,0],[5,8,10,6,4],[3,10,10,0],[4,2,6,1]],10,3,[6]]]
[[[[1],[],5,[]]],[4,8,3]]

[[10,[8,5]],[1,[0,4,[0]],1,3,[[0]]],[1,4,[[3,4,0,1,3],9],[10]],[],[10,[],[1,8,1,[5,2,10],1],[8,3,[1,4,7,1],1,[8]],[0,3,[8,5,0,3,0],[]]]]
[[10,0,[7,[5,2,5,7],2,3,8]],[9,[[4,9,10,3],10,[],[1,1,5,2,2],[1,2]],3,[[9,1,9]],[[8,8],8]],[[5,8,[0,1,1],[7,7]],1,[3,[2,1],[10]],[]],[[10],3,[3,1,5],[4,[7],[2],2,[7,10,10]]]]

[[],[5,10,[[1,2,6,0],[2,9]],[2,[9,10,6],[2,7,4]]]]
[[7,[[2,9,4,10,5],6],[[4],9,[0,4,3,5],0,0],4]]

[[[],[4,[1,6,7,7,3],[7,5,2,4],[5,10,1,2,7],[]]]]
[[[8],[3],8,4]]

[[2,8,0],[[]],[],[[]],[1,[2]]]
[[[4,0,[9,3,2,5,3],[1,4],[2,0]],0,0,[[7,9],[3,9,1,5,9]]],[[[6,0,9],[10,5,0,5],0,[1],[5]],8,10],[],[6,[10,1,[9,9,6,4],[8,8,7,6,0]],[[6,1,9,0]]]]

[[2,5,[[],2],[]],[6,[],1,1],[[7,8,3,8,5]],[[2,3],1,8,7],[]]
[[[[],[],6,6]],[[7,1]]]

[[9,6,[9],4],[],[],[[[],3,6],[10],[1,[9,9,1,6,6],[],9,6]]]
[[7,5]]

[[[2,[0,0],8,7,[7,6]],5,[[9,7,7,0,3]]],[[0,7,4]],[7],[]]
[[[4,2,4,9]]]

[[5,2,[[10,8,8,1],1,8,4],0,[[9,8,4,4],[4,1],4]],[],[1]]
[[4,7,[[7],0,8,0,1],[6],0],[4,4,9,[[1,3,0,5],[],[3,5,0,3,3]],[6,[9,2,7,9]]],[9],[8,6,7],[[10,[3,2,9]]]]

[[[[8,7,7,9,4]]]]
[[2,[3,[9,8,5,6,2],[3,3,6,2]],8],[],[3,8],[[[0,0,2],6,3,7],9,[[3,8,8,0],[6,8],[5,9,6],0,7]]]

[[10],[[[8],2,[8]],[],7],[[2,2,[4,6]],5,6],[[],[[],3],[[9],3]],[3]]
[[[[3,6,7,0],[9,8,8,3,0],5],[10],6]]

[[[4,[6,3,10,5],5,9,4]]]
[[[[7,0,8,3],10],[[1,4]]],[4,4,[[5,2,6],[3,1,6],[10],[]],[7,3,[],[5],[7,1]],[7,[],1,9,[7]]],[7,[]]]

[[0,[6,[3,3,6,7,5],[6,5]]],[[9],[]],[[4,[7,10,7],[7,5],8,[0,2,2,3,6]],0,1,5,2],[[8,8,[9,8,4],8,6],0,[[9,6,7,7,5],7]],[]]
[[4,5,4,[[3,2]],[7,5,[9],0]],[[],[],3],[[3,9,[7,3,8,6],[7,10,10]],0,[[0,5],[2],[]]],[]]

[[],[[[4],9,7],9,[[6,9,10],[8]]],[[1,[1,10,6,4],[4,9,6],[5,8,6,5,6],5],[0,[2],9],5,4,[7,2,10]],[9,4,2]]
[[2,[[1,0,0],4,2,[10,0,9,5,3]],[8,1,2,[6,4],1]]]

[[2,2],[[4,[1,7,7],[4,2]],[4,9,[10,5,10,1],[3]],[5,[],9,[7],3]],[[],[9]]]
[[[[7]],[2],[2,[3,2],[0],9],10,5],[4,3,2,[[7]],3],[[[7,2,4],0,0,[3,8]],[]],[[],0,[],[[],[5,0,0],[0,4,6],3,2]]]

[[],[[2,[0,1,1],10],[2,6,4,[0]]],[6,9,[[0,0,10,7,5],[],[10],[8,7,10,10]],7],[[2]]]
[[10,[[4,6,0,5]],9,[[3,1,0,9],5,[6,7],7],[[8,9,2,7],[4,6]]],[[8],1]]

[[[],[[10,3],5,[6,10,2,8]]]]
[[0,9,6]]

[[9,6,0],[[],5,10,10],[],[3,1,[[4,9,7,6,10],10],[[9,6,4,5,2]],6],[10,8,5]]
[[2,8],[[],[]]]

[[6],[0,[4,[9,9,0,0,7],[9,10],[7]],6,1],[[6],9,[0,8,[3,5]]],[4],[[[0,9,2,4,1],3,5],3,[3],[7],[[6,0,1],[2],[7,1,7,5,5]]]]
[[9,7],[7,5,[[],[2,0,9,0,0],9,[8,1,3,10]],2]]

[[],[[5],[1,[1,2,6,10,1]],[]],[[],1,8,[[8,7],[7],[4,4,7],[4,9,8]],[[2,6,4],4]]]
[[6,[10],1],[[9,8,[]],[1,[7,7,1,1,2]],5,[[5,8,9],[10,6,10,6],0,3,9],[7,2,[1,5]]],[4],[3,[2,[8,6,7,2],7]]]

[[9],[8,[[3,0,1,5,5],9],0,6],[1,[],1],[8,3,6,[[8,9],[10,9,6,8,4],[]]],[[],[3,5,1],2,6]]
[[4,[]],[5],[[],[]]]

[[5],[[[],[2,2]],4],[5,[[],[9,3,0,1,4],[0,2,1]],[[3],[8,4,10],[]]],[]]
[[10,[6,10,3,7],[0],3,4]]

[[1,[[5]],[4,1,[]],10,[4,[2,6,5,4,2]]]]
[[[],5,[],5],[8,3,4,6,7],[1,[]]]"
}